from turtle import *
from random import randrange
from freegames import square, vector

'''
5.1 La comida podrá moverse al azar un paso a la vez y no deberá de salirse de la ventana

6.1 Cada vez que se corra el juego, la víbora y la comida deberán tener colores diferentes entre sí, pero al azar, de una serie de 5 diferentes colores, excepto el rojo.
'''

food = vector(0, 0)
snake = [vector(10, 0)]
aim = vector(0, -10)
color= ['green','yellow','blue','black','cyan'] # vector o lista de colores 
snake_color= random.choice(color) # escoge color aleatorio de la lista
food_color= random.choice(color) 

''' En esta parte se decide que si el color de la comida y de la serpiente son iguales, 
se cambie el color de la comida para que sean diferentes mediantes un estatuto condicional'''

while food_color == snake_color:
    food_color= random.choice(color)

def change(x, y):
    "Change snake direction."
    aim.x = x
    aim.y = y

def inside(head):
    "Return True if head inside boundaries."
    return -200 < head.x < 190 and -200 < head.y < 190

def move():
    global snake_color, food_color
    "Move snake forward one segment."
    write('Iván A00827382')
    head = snake[-1].copy()
    #mueve head en la dirección indicada por el usuario
    head.move(aim)

    if not inside(head) or head in snake:
        square(head.x, head.y, 9, 'red')
        update()
        return

    snake.append(head) # len=2
    
    longitud= len(snake)
    '''   
    if head == food and longitud == 2:
        print('Snake:', longitud)
        food.x = randrange(-15, 15) * 10
        food.y = randrange(-15, 15) * 10
             
    else:
        snake.pop(0)
    '''

    if head == food:
        print('Snake:', longitud)
        food.x = randrange(-15, 15) * 10
        food.y = randrange(-15, 15) * 10
        ant_snake= snake_color
        ant_food= food_color
        snake_color= random.choice(color)
        
        ''' COMPARA QUE LOS COLORES NO SE REPITAN Y QUE CAMBIEN RESPECTO AL ANTERIOR ''' 
        
        while ant_snake == snake_color:
            snake_color= random.choice(color)
        food_color= random.choice(color)
        while (food_color == snake_color) \
            or (food_color == ant_food):
            food_color= random.choice(color)
    else:
        snake.pop(0)
    
   #borra el rastro del snake
    clear()
    
    # dibuja el cuerpo del snake y de la comida
    for body in snake:
        square(body.x, body.y, 9, snake_color)  
    square(food.x, food.y, 9, food_color)
    update()
    ontimer(move, 100)

setup(420, 420, 370, 0)
hideturtle()
tracer(False)
listen()
onkey(lambda: change(10, 0), 'Right')
onkey(lambda: change(-10, 0), 'Left')
onkey(lambda: change(0, 10), 'Up')
onkey(lambda: change(0, -10), 'Down')
move()
done()
